- Pourquoi React ?


- Ecrivez un composant React qui affiche un titre h1 avec marqué "Bonjour" suivi du nom passé en props.

```
import React, { Component } from 'react'

export default class dlfj extends Component {
    render() {
        return (
            <div>
                <h1>Bonjour {this.props.nom}</h1>
            </div>
        )
    }
}
```

- A quoi sert une props ?
ils servent a passer de l'information d'un composant à l'autres

- Quelle méthode peut on utiliser pour afficher une partie de chaque élément d'un tableau ?
la fonction .map 

- Grace à cette méthode, completer le code suivant pour afficher le Nom et Prénom dans une balise p de chacun des apprenants

```jsx
import React from 'react';

class Promo extends React.Component {
	apprenants = [
		{firstName: "John", lastName: "Doe"}, 
		{firstName: "Jane", lastName: "Roe"}, 
		{firstName: "Larry", lastName: "Loe"}
	];

	render() {
		return (
			<div>
            <p>apprenants.map(firstName) </p>
            <p>apprenants.map(lastName) </p>
            </div>
		);
	}
}

export default Promo;
```

- Dans quel cas doit on utiliser un state ? Quelles sont les différences avec les props ?
utiliser state si ce qu'on veut render est amené a etre modifié, c'est egalement la diff avec le props qui lui est fixe

- Comment peut on passer une information d'un parent à son enfant ? et d'un enfant à son parent ?


- Sur quel élément HTML peux on récuperer l'evenement onClick ?
sur un bouton, ou un lien

- Completez le code suivant pour recuperer dans le state name, la valeur rentrer par l'utilsateur dans l'input

```jsx
import React from 'react';

class Form extends React.Component {
	constructor(props) {
		super(props)
        this.state = {
            name: ""
        }
	}

	onChange = (event) => {
		this.setState({name: event.target.value})
	}

	render() {
		return (
			<input value={this.state.name} onChange={this.onChange} />
		);
	}
}

export default Form;
```

- A quoi sert une fonction de callback asynchrone ?
pouvoir appeler un function une fois qu'une autre a fini d'etre executée

- Quelle est la différence entre une fonction de callback et une promesse ?
???

- Expliquez du mieux possible le cycle de vie d'un composant React.
???

- Completez le code suivant qui va chercher le pokemon suivant: [https://pokeapi.co/api/v2/pokemon/17](https://pokeapi.co/api/v2/pokemon/17) et qui affiche son nom

```jsx
import React from 'react';

class Pokemon extends React.Component {
	constructor(props) {
		super(props);
		this.state = {
			name: ""
		}
	}
    poke = () => {
    fetch("https://pokeapi.co/api/v2/pokemon/17")
      .then(res => res.json())
      .then(pokemon => {
        this.setState({
            name: pokemon[0].name
        })
      })
      .catch(error => alert error("error"))
    }

	render() {
		return (
			<p>My pokemon is: {this.state.name}</p>
		);
	}
}

export default Form;
```

- Comment mettre à jour le code ci dessus pour gerer une possible erreur lors de la récupération des infos du pokémon ?
- A quoi sert un Router ?
pouvoir donner un url differents pour chaque composants sur notre app par exemple.

- Quels sont les 4 principaux composants d'un Router et à quoi servent ils ?
BrowserRouter, Route, Link, Switch

BrowserRouter = a placer autour de l'app
route = determine qu'elle composant est appelé par chaque url
link = liens
switch = sert a lister les chemins possible 